package JavaCollections.Map;

/* LinkedHashMap

LinkedHashMap — это класс в Java, который реализует интерфейс Map и сочетает в себе функциональность HashMap и LinkedList.
 Он сохраняет порядок добавления элементов и обеспечивает быстрый доступ к элементам по ключу, как это делает HashMap.

### Основные характеристики LinkedHashMap:

1. Сохранение порядка:
- В отличие от HashMap, который не гарантирует порядок элементов, LinkedHashMap сохраняет порядок вставки элементов.
 Это означает, что при итерации по коллекции элементы будут выводиться в том порядке, в котором они были добавлены.

2. Реализация:
- LinkedHashMap использует двойные связные списки для хранения порядка вставки и хеш-таблицу для хранения ключей и значений.
 Это позволяет быстро находить элементы по ключу и сохранять порядок.

3. Конструкторы:
- LinkedHashMap предоставляет несколько конструкторов, включая возможность задания начального размера и коэффициента загрузки,
 а также создания пустой карты с заданной последовательностью доступа (по умолчанию по порядку вставки).

4. Методы:
- Все методы, доступные в HashMap, доступны и для LinkedHashMap, включая методы для добавления, удаления,
поиска и получения значений по ключам.

5. Порядок доступа:
- LinkedHashMap может быть сконфигурирован для сохранения порядка доступа, а не порядка вставки. Это означает,
 что при использовании специального конструктора приоритет будет отдаваться недавно использованным элементам при переборе.

6. Производительность:
- Производительность LinkedHashMap аналогична HashMap — она O(1) для операций вставки, удаления и доступа.
 Однако дополнительные расходы связаны с поддержанием связного списка.

7. Использование:
- LinkedHashMap полезен в случаях, когда важно сохранить порядок элементов, например, при реализации кэшей,
 где важно помнить порядок использования элементов.*/

import java.util.LinkedHashMap;
import java.util.Map;

public class LinkedHashMapExample {
    public static void main(String[] args) {
        // Создание LinkedHashMap
        LinkedHashMap<String, Integer> map = new LinkedHashMap<>();

        // Добавление элементов
        map.put("A", 1);
        map.put("B", 2);
        map.put("C", 3);

        // Печать элементов
        System.out.println("Элементы LinkedHashMap: " + map);

        // Получение значения по ключу
        int valueB = map.get("B"); // Получить значение по ключу "B"
        System.out.println("Значение для ключа 'B': " + valueB);

        // Удаление элемента
        map.remove("A"); // Удалить элемент с ключом "A"
        System.out.println("После удаления ключа 'A': " + map);

        // Итерация по элементам
        System.out.println("Итерация по LinkedHashMap:");
        for (Map.Entry<String, Integer> entry : map.entrySet()) {
            System.out.println(entry.getKey() + " => " + entry.getValue());
        }
    }
}
